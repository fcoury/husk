enum Command {
    Process {
        input: string,
        output: string,
    },
    Help,
}

fn parse_args(args: array<string>) -> Result<Command, string> {
    if args.len() < 2 {
        return Err("Not enough arguments");
    }
    
    match args[1] {
        "process" => {
            if args.len() < 4 {
                return Err("Process command requires input and output paths");
            }
            Ok(Command::Process { 
                input: args[2], 
                output: args[3] 
            })
        }
        "help" => Ok(Command::Help),
        _ => Err("Unknown command")
    }
}

fn main() {
    let args = ["cli", "process", "input.txt", "output.txt"];
    
    let result = parse_args(args);
    match result {
        Ok(Command::Process { input: input, output: output }) => {
            println("Processing from " + input + " to " + output);
        }
        Ok(Command::Help) => {
            println("Usage: cli <command> [args]");
        }
        Err(msg) => {
            println("Error: " + msg);
        }
    }
}