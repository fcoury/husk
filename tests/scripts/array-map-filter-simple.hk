// Simple test for map() and filter() methods
let numbers = [1, 2, 3, 4, 5];

// Test map() - transform each element
println!(numbers.map(|x| x * 2));           // Should print: [2, 4, 6, 8, 10]
println!(numbers.map(|x| x + 1));           // Should print: [2, 3, 4, 5, 6]
println!(numbers.map(|x| x * x));           // Should print: [1, 4, 9, 16, 25]

// Test filter() - keep elements that match condition
println!(numbers.filter(|x| x > 3));        // Should print: [4, 5]
println!(numbers.filter(|x| x % 2 == 0));   // Should print: [2, 4]
println!(numbers.filter(|x| x < 3));        // Should print: [1, 2]

// Test empty array
let empty = [];
println!(empty.map(|x| x * 2));             // Should print: []
println!(empty.filter(|x| x > 0));          // Should print: []

// Test with environment capture
let threshold = 3;
let base = 10;
println!(numbers.filter(|x| x > threshold)); // Should print: [4, 5]
println!(numbers.map(|x| x + base));         // Should print: [11, 12, 13, 14, 15]

// Test with simpler expressions (block scoping needs work)
println!(numbers.map(|x| x * 2 + 1));       // Should print: [3, 5, 7, 9, 11]
println!(numbers.filter(|x| x % 3 == 1));   // Should print: [1, 4]

// Test edge cases
let single = [42];
println!(single.map(|x| x / 2));            // Should print: [21]
println!(single.filter(|x| x > 40));        // Should print: [42]
println!(single.filter(|x| x < 40));        // Should print: []