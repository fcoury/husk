struct Config {
    host: string,
    port: int,
    debug: bool,
    timeout: int,
}

enum Request {
    Get { url: string, headers: string, body: string },
    Post { url: string, data: string, auth: string },
}

fn main() {
    let config = Config {
        host: "localhost",
        port: 8080,
        debug: true,
        timeout: 30,
    };
    
    // Test struct pattern with rest
    match config {
        Config { host, port, .. } => {
            println(format!("Server at {}:{}", host, port));
        }
    }
    
    let req = Request::Get { 
        url: "/api/data", 
        headers: "Content-Type: json",
        body: ""
    };
    
    // Test enum variant pattern with rest
    match req {
        Request::Get { url, .. } => {
            println(format!("GET request to {}", url));
        }
        Request::Post { url, data, .. } => {
            println(format!("POST {} with data: {}", url, data));
        }
    }
}